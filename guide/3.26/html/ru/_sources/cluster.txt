Масштабирование вместе с Akka and Hazelcast
===========================================

Xitrum спроектирован с расчетом на работу нескольких экземпляров приложения за 
балансировщиком нагрузки или прокси сервером:

::

                                          / экземпляр Xitrum 1
  Балансировщик нагрузки/Прокси сервер ---- экземпляр Xitrum 2
                                          \ экземпляр Xitrum 3

Кэш, сессии и SockJS сессии могут быть кластеризованы из коробки благодаря использованию
`Akka <http://akka.io/>`_ и `Hazelcast <https://github.com/xitrum-framework/xitrum-hazelcast>`_.

Совместно с Hazelcast, экземпляр Xitrum становится одновременно кэширующим сервером. Вам не нужна
дополнительная сущность вроде Memcache.

Смотри конфигурацию ``config/akka.conf``, `Akka doc <http://akka.io/docs/>`_ и
`Hazelcast doc <http://hazelcast.org/documentation/>`_ что бы узнать как настроить
Akka и Hazelcast для кластеризации.

Важно: Сессию вы может так же хранить :doc:`внутри куки </scopes>`.
